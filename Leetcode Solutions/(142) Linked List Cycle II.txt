/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) 
    {
        ListNode *ptr, *ptr1;
        ptr=head;
        ptr1=head;
        if((ptr==NULL)||(ptr->next==NULL)||(ptr->next->next==NULL))
            return NULL;
        do
        {
            ptr=ptr->next;
            ptr1=ptr1->next->next;
        }while((ptr!=ptr1)&&(ptr1->next!=NULL)&&(ptr!=NULL)&&(ptr1!=NULL)&&(ptr1->next->next!=NULL));
        if(ptr==ptr1)
        {
            ptr=head;
            while(ptr1!=ptr)
            {
                ptr=ptr->next;
                ptr1=ptr1->next;
            }
            return ptr;
        }
        return NULL;
    }
};