class Solution {
public:
    int longestPalindromeSubseq(string s) 
    {
        vector<int> v;
        vector<vector<int>> vv;
        int n=s.size();
        int i,j;
        for(i=0; i<n; i++)
        {
            v.push_back(0);
        }
        for(i=0; i<n; i++)
        {
            vv.push_back(v);
        }
        for(i=0; i<n; i++)
        {
            vv[i][i]=1;
        }
        for(int c=2; c<=n; c++)
        {
            for(i=0; i<(n-c+1); i++)
            {
                j=c-1+i;
                if(s[i]==s[j])
                {
                    if(c==2)
                        vv[i][j]=2;
                    else
                        vv[i][j]=vv[i+1][j-1]+2;
                }
                else
                {
                    vv[i][j]=max(vv[i+1][j],vv[i][j-1]);
                }
            }
        }
        return vv[0][n-1];
    }
};
