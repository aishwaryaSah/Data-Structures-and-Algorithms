1.
class Solution {
public:
    int maxProfit(vector<int>& p) {
        if(p.size()<=1)
            return 0;
        vector<int>dp(p.size(),0);
        int i,min=10000;
        for(i=0; i<p.size(); i++)
        {
            if(p[i]<min)
            {
                min=p[i];
            }
            if(i>0)
                dp[i]=max(p[i]-min,dp[i-1]);
            else
                dp[i]=p[i]-min;
        }
        return dp[p.size()-1];
    }
};

2.
class Solution {
public:
    int maxProfit(vector<int>& p) 
    {
        int i,max=0,k=0;
        stack<int>s;
        for(i=0; i<(p.size()); i++)
        {
            if((s.empty())||(p[i]<s.top()))
            {
                s.push(p[i]);
            }
            else
            {
                k=p[i]-(s.top());
                if(k>max)
                    max=k;
            }
        }
        return max;
    }
};
