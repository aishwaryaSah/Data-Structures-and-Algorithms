class Solution {
public:
    
    map<char,int>mp1;
    map<char,int>mp2;
    
    int calc(vector<int>score, string x)
    {
        int ans=0,i;
        for(i=0; i<x.size(); i++)
        {
            if(mp2[x[i]]>0)
            {
                ans=ans+score[x[i]-'a'];
                mp2[x[i]]--;
            }
            else
                return 0;
        }
        return ans;
    }
    
    
    int maxScoreWords(vector<string>& words, vector<char>& letters, vector<int>& score) {
        if(words.size()==0 || letters.size()==0 || score.size()==0)
            return 0;
        int ans=-1, val=0;
        for(int i=0; i<letters.size(); i++)
        {
            mp1[(char)letters[i]]++;
            mp2[(char)letters[i]]++;
        }
        int len=words.size();
        int mask=(1<<len)-1;
        
        for(int i=0; i<=mask; i++)
        {
            val=0;
            for(int j=0; j<len; j++)
            {
                if(i&(1<<j))
                {
                    val+=calc(score,words[j]);
                }
            }
            // cout<<val<<endl;
            if(val>ans)
                ans=val;
            mp2=mp1;
        }
        return ans;
    }
};
