1.
class Solution {
public:
    int rob(vector<int>& nums) {
        if(nums.size()==0)
            return 0;
        if(nums.size()==1)
            return nums[0];
        vector<int>dp(nums.size(),0);
        int i;
        for(i=0; i<nums.size(); i++)
        {
            if(i==0)
                dp[i]=nums[i];
            else if(i==1)
                dp[i]=max(nums[i],nums[i-1]);
            else
            {
                dp[i]=max(nums[i]+dp[i-2], dp[i-1]);
            }
        }
        return max(dp[nums.size()-1],dp[nums.size()-2]);
    }
};

2.
class Solution {
public:
    int rob(vector<int>& nums) 
    {
        int l=nums.size(),i;
        vector<int> x;
        for(i=0; i<=l; i++)
        {
            x.push_back(0);
            if(i==1)
            {
                x[i]=nums[i-1];
            }
            else if(i>1)
            {
                if((nums[i-1]+x[i-2])>(x[i-1]))
                {
                    x[i]=nums[i-1]+x[i-2];
                }
                else
                {
                    x[i]=x[i-1];
                }
            }
        }
        return x[l];
    }
};
