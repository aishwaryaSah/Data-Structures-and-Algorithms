class Solution {
public:
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) 
    {
        int i,l1,l2,max,top,low;
        vector<int>a;
        max=-1;
        l1=nums1.size();
        l2=nums2.size();
        if((l1==0)||(l2==0))
            return a;
        if(l2>l1)
        {
            //cout<<l1<<endl;
            for(i=0; i<l2; i++)
            {
                if(nums2[i]>max)
                    max=nums2[i];
            }
            vector<int>hash(max+1,0);
            for(i=0; i<l2; i++)
            {
                if(hash[nums2[i]]==0)
                    hash[nums2[i]]=2;
            }
            for(i=0; i<l1; i++)
            {
                if(nums1[i]<=max)
                if(hash[nums1[i]]==2)
                    hash[nums1[i]]=1;
            }
            for(i=0; i<=max; i++)
            {
                if(hash[i]==1)
                    a.push_back(i);
            }
        }
        else
        {
            //cout<<l1<<endl;
            for(i=0; i<l1; i++)
            {
                if(nums1[i]>max)
                    max=nums1[i];
            }
            vector<int>hash(max+1,0);
            for(i=0; i<l1; i++)
            {
                if(hash[nums1[i]]==0)
                    hash[nums1[i]]=2;
            }
            for(i=0; i<l2; i++)
            {
                if(nums2[i]<=max)
                if(hash[nums2[i]]==2)
                    hash[nums2[i]]=1;
            }
            for(i=0; i<=max; i++)
            {
                if(hash[i]==1)
                    a.push_back(i);
            }
        }
        return a;
    }
};