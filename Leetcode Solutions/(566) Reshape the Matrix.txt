class Solution {
public:
    vector<vector<int>> matrixReshape(vector<vector<int>>& nums, int r, int c) 
    {
        int ro,co;
        ro=nums.size();
        if(ro>0)
        {
            co=nums[0].size();
        }
        else
        {
            co=0;
        }
        if((r*c)==(ro*co))
        {
            int i,j,l,t;
            vector< vector <int> > res;
            vector<int>temp;
//            cout<<ro<<co<<endl;
            for(i=0;i<ro; i++)
            {
                for(j=0;  j<co; j++)
                {
                    //cout<<nums[i][j]<<" ";
                    temp.push_back(nums[i][j]);
                }
            }
            //cout<<c<<r;
//            l=temp.size();
            t=0;
            for(i=0; i<r; i++)
            {
                vector<int>xx;
                for(j=0; j<c; j++)
                {
                    xx.push_back(temp[t]);
                    t++;
                }
                
                res.push_back(xx);
                xx.clear();
            }
            return res;
        }
        else
        {
            return nums;
        }
    }
};