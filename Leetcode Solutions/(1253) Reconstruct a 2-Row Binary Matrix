class Solution {
public:
    vector<vector<int>> reconstructMatrix(int upper, int lower, vector<int>& colsum) {
        vector<vector<int> > v;
        vector<vector<int> > xyz;
        vector<int>temp;
        int n,i;
        n=colsum.size();
        for(i=0; i<n; i++)
        {
            temp.push_back(0);
        }
        v.push_back(temp);
        v.push_back(temp);
        // xyz.push_back(temp);
        // xyz.push_back(temp);
        for(i=0; i<n; i++)
        {
            if(colsum[i]==2)
            {
                if(upper!=0)
                {
                    v[0][i]=1;
                    upper--;
                }
                else
                    return xyz;
                if(lower!=0)
                {
                    v[1][i]=1;
                    lower--;
                }
                else
                    return xyz;
                
            }
        }
        for(i=0; i<n; i++)
        {
            if(colsum[i]==0)
                continue;
            else if(colsum[i]==1)
            {
                if(upper!=0)
                {
                    v[0][i]=1;
                    upper--;
                }
                else if(lower!=0)
                {
                    v[1][i]=1;
                    lower--;
                }
                else
                    return xyz;
            }
        }
        if(upper!=0 || lower!=0)
            return xyz;
        return v;
    }
};
